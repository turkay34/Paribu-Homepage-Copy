import {Component} from "react";
import classes from "./CoinDetail.module.scss";

import {Tab, Tabs, TabList, TabPanel} from 'react-tabs';
import { coins } from "../CoinData";
import 'react-tabs/style/react-tabs.css';
import TextField from '@mui/material/TextField';
import produce from "immer";

class CoinDetail extends Component {
    constructor(props) {
        super(props);
        this.state = {
            selectedCoin: {
                coinKey: 1,
                coinLogo: 'https://www.paribu.com/app-assets/symbols/usdt.png',
                coinBackgroundRgb: 'rgb(80, 174, 148)',
                coinName: 'Tether',
                coinTag: 'usdt-tl',
                coinLastStatus: '13,491',
                coinSymbol: 'TL',
                coinPercentage: '+%0.6',
                coinValueStatus: '+',
                coinMarketValue: '14.3M',
                coinMarketValueSymbol: 'usdt',
                coinSVG: 'M20 48.6363636363635L22.218116169035444 52.545211710468S23.61111111111111 55 25.416666666666664 52.83057851239684L27.22222222222222 50.66115702479369L29.02777777777778 48.636363636363754S30.833333333333336 46.61157024793381 31.938077415181613 49.08934336984153L33.62867849918292 52.88110473306899S34.44444444444444 54.71074380165305 36.25 53.84297520661168L36.25 53.84297520661168S38.05555555555556 52.97520661157032 39.01120105635584 51.21458317780097L40.67917450799961 48.14160983840894S41.66666666666667 46.322314049586865 43.47222222222222 47.33471074380171L43.47222222222223 47.33471074380171S45.27777777777778 48.34710743801654 46.95693992766464 47.13657350415018L47.08333333333333 47.0454545454545S48.888888888888886 45.74380165289245 49.91605016133842 43.76914450865386L51.60244272496349 40.52715397311535S52.5 38.801652892562046 54.30555555555556 38.07851239669416L54.30555555555556 38.07851239669416S56.111111111111114 37.35537190082627 56.837678893149324 39.159551021386555L58.99565444018401 44.51813492902658S59.72222222222222 46.322314049586865 61.52777777777778 47.04545454545476L61.52777777777778 47.04545454545476S63.333333333333336 47.76859504132265 65.13888888888889 47.04545454545476L66.94444444444444 46.322314049586865L68.75 45.74380165289271S70.55555555555556 45.16528925619855 72.20929976852246 44.23801500582553L72.36111111111111 44.152892561983705S74.16666666666666 43.14049586776887 75.84582881655363 44.35102980163508L77.77777777777777 45.74380165289245L79.75128972739601 47.00845520992705S81.38888888888889 48.057851239669596 83.19444444444444 47.33471074380171L83.30250517044497 47.29143149562602S85 46.61157024793381 86.80555555555556 46.322314049586865L86.80555555555556 46.322314049586865S88.61111111111111 46.03305785123992 89.87767792576263 44.71415356490858L90.7884216604473 43.765775791600575S92.22222222222223 42.27272727272751 94.02777777777777 41.26033057851241L94.02777777777777 41.26033057851241S95.83333333333333 40.24793388429731 96.42312473331803 38.26371513749562L98.87367383846126 30.019401174102093S99.44444444444444 28.09917355371872 101.25 28.966942148760083L101.25 28.966942148760083S103.05555555555556 29.83471074380145 103.74603853721119 27.95420909509663L105.00070007003218 24.53719065478829S106.66666666666667 20 108.47222222222223 24.48347107438004L109.58409365450392 27.244418191031112S110.27777777777779 28.966942148760086 112.08333333333334 29.400826446280767L112.08333333333334 29.400826446280767S113.88888888888889 29.83471074380145 114.80536172073458 31.44975377614494L116.59753247919132 34.607984763075756S117.5 36.198347107437954 119.30555555555556 35.90909090909075L119.30555555555556 35.90909090909075S121.11111111111111 35.61983471074354 122.48308826440451 34.41095973651306L123.35024506892883 33.64689150315601S124.72222222222223 32.438016528925544 126.52777777777777 32.72727272727275L126.54480062801775 32.729999846319465S128.33333333333331 33.01652892561996 130.13888888888889 32.87190082644622L131.94444444444446 32.72727272727249L135.55555555555554 32.438016528925544L137.36111111111111 32.14876033057834S139.16666666666669 31.85950413223113 140.33641624485006 30.454019896524557L140.97222222222223 29.690082644627974S142.77777777777777 27.52066115702482 144.32768638335713 29.87951761078008L145.39423001574568 31.50272514793091S146.38888888888889 33.01652892561996 148.19444444444446 32.87190082644622L148.19444444444446 32.87190082644622S150 32.72727272727249 151.46932553157419 31.668013253143318L151.80555555555554 31.425619834710446S153.61111111111111 30.1239669421484 155.09250244427932 28.462699102537087L156.02054413732088 27.42197084664053S157.22222222222223 26.07438016528904 159.02777777777777 26.07438016528904L159.02777777777777 26.07438016528904S160.83333333333334 26.07438016528904 162.6331241358307 25.930213832730523L162.6388888888889 25.929752066115565S164.44444444444446 25.78512396694209 166.16940338998194 26.337812656421306L166.25 26.363636363636246S168.05555555555557 26.942148760330404 169.70929976852247 27.869423010703425L171.66666666666666 28.966942148760086L173.50937679647467 29.557359126142885S175.27777777777777 30.1239669421484 177.08333333333331 29.690082644627974L177.1276880978073 29.679423966324638S178.88888888888889 29.25619834710755 180.69444444444446 29.11157024793382L180.69444444444446 29.11157024793382S182.5 28.966942148760086 184.30555555555554 29.11157024793382L184.30555555555554 29.11157024793382S186.11111111111111 29.25619834710755 187.691035287363 30.142080815927716L188.14734240624978 30.39793770013503S189.72222222222223 31.280991735537228 191.52777777777777 31.280991735537228L191.52777777777777 31.280991735537228S193.33333333333334 31.280991735537228 194.74253586435069 32.409787151355296L195.51727278796565 33.03036472526175S196.94444444444446 34.17355371900827 198.75 34.46280991735522L200.55555555555557 34.75206611570218L202.40546587558512 35.19660909152621S204.16666666666666 35.61983471074354 205.97222222222223 35.764462809917276L205.97222222222223 35.764462809917276S207.77777777777777 35.909090909091006 208.98330485302017 34.557183877477655L209.58333333333331 33.884297520661065S211.38888888888889 31.85950413223113 212.878620551635 29.59223293031487L213.95886690003118 27.94817078278755S215 26.36363636363599 216.80555555555554 26.942148760330404L216.842710129808 26.954053341019055S218.61111111111111 27.52066115702482 220.41666666666669 27.086776859504134L220.44425871988582 27.080146347033164S222.22222222222223 26.652892561983453 224.02777777777777 26.942148760330404L224.02777777777777 26.942148760330404S225.83333333333334 27.231404958677356 227.6388888888889 26.942148760330404L229.44444444444446 26.652892561983453L231.25 26.219008264462772S233.05555555555557 25.78512396694209 234.44882429699413 24.55748857238769L234.86111111111111 24.194214876032838S236.66666666666666 22.60330578512358 238.40159404030427 24.270953711976865L238.54285040414013 24.406732238435747S240.27777777777777 26.07438016528904 242.08333333333331 27.665289256198292L242.5169117355956 28.047323372876985S243.88888888888889 29.25619834710755 245.69444444444446 29.545454545454497L245.69444444444446 29.545454545454497S247.5 29.83471074380145 248.37231434499375 28.227611588180427L250.18326615725806 24.89122357041692S251.11111111111111 23.181818181817995 252.91666666666669 22.458677685950107L253.04610008278755 22.406838491953817S254.72222222222223 21.73553719008222 256.5277777777778 21.73553719008222L256.5277777777778 21.73553719008222S258.33333333333337 21.73553719008222 260.009455472768 22.40683849195382L260.2206063476543 22.4914062295116S261.94444444444446 23.181818181817995 263.75 22.747933884297314L263.794354764474 22.737275205993953S265.55555555555554 22.314049586776633 267.3611111111111 22.169421487603156L267.3611111111111 22.169421487603156S269.16666666666663 22.02479338842968 270.12579720185056 23.561353432081L271.7944921268322 26.234659987042008S272.77777777777777 27.80991735537177 274.58333333333337 27.37603305785109L274.58333333333337 27.37603305785109S276.3888888888889 26.942148760330404 277.67511143826704 25.602776518829224L280 23.181818181817995'
            }
        }
    }

    getCoinDetails(targetedCoinName) {
        let targetedCoin = coins.filter(coin => coin.coinName == targetedCoinName)[0]
        const baseState = this.state;
        let nextState = produce(baseState, draftState => {
            draftState.selectedCoin = targetedCoin;
        })
        this.setState(nextState)
    }

    componentDidMount() {
        this.getCoinDetails(this.props.match.params.coinName)
    }

    render() {
        return (
            <div className={classes.detailContainer}>
                <div className={classes.detailRow}>
                    <div className={classes.detailColumn}>
                        <div className={classes.detailHead}>
                            <div className={classes.detailCoinSelect}>
                                <div className={classes.detailSelectWrapper}>
                                    <div className={classes.coinImageWrapper}>
                                        <div className={classes.coinBackground}
                                             style={{background: `${this.state.selectedCoin.coinBackgroundRgb}`}}/>
                                        <img src={this.state.selectedCoin.coinLogo} alt={this.state.selectedCoin.coinName}/>
                                    </div>
                                    <span className={classes.detailCoinName}>{this.state.selectedCoin.coinName}</span>
                                    <span className={classes.detailCoinSymbol}>{this.state.selectedCoin.coinMarketValueSymbol}</span>
                                </div>
                                <div className={classes.moreCoinDropDown}>
                                    <i className="fas fa-angle-down"/>
                                </div>
                            </div>
                            <div className={classes.detailInfo}>
                                <span className={classes.detailInfoText}>bilgilendirme</span>
                                <button><i className="far fa-question-circle"/></button>
                            </div>
                            <div className={classes.detailChart}>
                                <svg strokeLinecap="round" display="block" strokeWidth="0.2" viewBox="0 0 300 75">
                                    <defs>
                                        <linearGradient id="98" gradientUnits="userSpaceOnUse" x1="0" y1="100%" x2="0"
                                                        y2="0">
                                            <stop offset="0" stopColor="currentColor"/>
                                        </linearGradient>
                                    </defs>
                                    <path
                                        d={this.state.selectedCoin.coinSVG}
                                        fill="none" stroke="url(#98)"/>
                                </svg>
                            </div>
                            <div className={classes.detailMarket}>
                                <h3>₺{this.state.selectedCoin.coinLastStatus}</h3>
                                <p>{this.state.selectedCoin.coinPercentage}<i className="fas fa-arrow-down"/></p>
                            </div>
                        </div>
                        <div className={classes.detailBody}>
                            <Tabs className={classes.detailTabs}>
                                <TabList>
                                    <Tab selectedClassName={classes.selectedTabSell}>{this.state.selectedCoin.coinName} Al</Tab>
                                    <Tab selectedClassName={classes.selectedTabBuy}>{this.state.selectedCoin.coinName} Sat</Tab>
                                </TabList>

                                <TabPanel className={classes.buyTab}>
                                    <div className={classes.selectedTabContentWrapper}>
                                        <div className={classes.tabContentBuyInput}>
                                            <TextField
                                                fullWidth
                                                variant="standard"
                                                className={classes.contentTextField}
                                                label={`${this.state.selectedCoin.coinName} almak için belirlediğiniz Türk Lirası miktarını girin. (TL)`}
                                            />
                                        </div>
                                        <div className={classes.tabContentMessage}>
                                            <div className={classes.tabMessageWrapper}>
                                                <div className={classes.tabMessageDiv}>
                                                    Kullanılabilir 0
                                                </div>
                                            </div>
                                            <button>{this.state.selectedCoin.coinName} Al</button>
                                        </div>
                                    </div>
                                </TabPanel>
                                <TabPanel className={classes.sellTab}>
                                    <div className={classes.selectedTabContentWrapper}>
                                        <div className={classes.tabContentSellInput}>
                                            <TextField
                                                fullWidth
                                                variant="standard"
                                                className={classes.contentTextField}
                                                label={`Satmak istediğiniz Avalanche miktarını giriniz. (${this.state.selectedCoin.coinName})`}
                                            />
                                        </div>
                                        <div className={classes.tabContentMessage}>
                                            <div className={classes.tabMessageWrapper}>
                                                <div className={classes.tabMessageDiv}>
                                                    Kullanılabilir 0
                                                </div>
                                            </div>
                                            <button>{this.state.selectedCoin.coinName} Sat</button>
                                        </div>
                                    </div>
                                </TabPanel>
                            </Tabs>
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}

export default CoinDetail;